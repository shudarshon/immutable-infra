---

#- name: Ensure tomcat_java_home is defined
#  fail: msg="You must define the tomcat_java_home variable"
#  when: tomcat_java_home is not defined

# Create tomcat user group
- name: Create tomcat group
  group:
    name: "{{ tomcat_group }}"
    system: yes
  tags: [create_tomcat_group]

# Create tomcat user as a system user
- name: Create tomcat user
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    shell: /bin/bash
    home: "{{tomcat_home_dir}}"
    system: yes
    createhome: no
  tags: [create_tomcat_user]

# Download and extract specific tomcat version
- name: Download and extract tomcat archive
  unarchive:
    src: "{{ tomcat_url }}"
    dest: /opt
    copy: no
    mode: 0750
    owner: root
    group: "{{ tomcat_group }}"
  tags: [download_extract]

# Set tomcat user permission of work, webapps, temp and logs directory
- name: Make the tomcat user the owner of the webapps, work, temp, and logs directories
  file:
    path: "{{tomcat_home_dir}}/{{item}}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    recurse: yes
  with_items:
    - webapps
    - work
    - temp
    - logs
  tags: [web_work_temp_logs_perm]

# Change tomcat permission on conf directory in app path
- name: Grant Tomcat group read access to the conf directory
  file:
    state: directory
    path: "{{tomcat_home_dir}}/conf"
    mode: "g+r"
    recurse: true
  tags: [conf_g+r_perm]

# Change tomcat permission on conf directory in app path
- name: Grant Tomcat group execute access to the conf directory itself
  file:
    path: "{{tomcat_home_dir}}/conf"
    state: directory
    mode: "g+x"
  tags: [conf_g+x_perm]

# Replace tomcat-users xml for applying tomcat roles
- name: Create tomcat-users.xml
  template:
    src: tomcat-users.xml.j2
    dest: "{{tomcat_home_dir}}/conf/tomcat-users.xml"
  #notify: restart tomcat
  tags: [apply_tomcat_user_role]

# Changing IP restricion of tomcat app server from localhost to any IP
- name: Replace ip restriction of manager & host-manager role
  template:
    src: context.xml.j2
    dest: "{{ item }}"
  #notify: restart tomcat
  with_items:
    - "{{tomcat_home_dir}}/webapps/host-manager/META-INF/context.xml"
    - "{{tomcat_home_dir}}/webapps/manager/META-INF/context.xml"
  tags: [remove_tomcat_role_ip_restriction]

# Create app directory symbolic link
- name: Symlink Tomcat to current version
  file:
    src: "{{ tomcat_home_dir }}"
    dest: "{{ tomcat_app_path }}"
    state: link
  tags: [create_app_link]

# Installing systemd script for managin tomcat service
- name: Create systemd service script for Tomcat
  template:
    src: "tomcat.service.j2"
    dest: "/lib/systemd/system/tomcat.service"
  notify:
    - reload systemd
    - enable tomcat
    - restart tomcat
    #- restart nginx
  tags: [systemd_script_install]
